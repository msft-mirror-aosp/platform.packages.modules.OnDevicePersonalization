/*
 * Copyright (C) 2024 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.android.federatedcompute.services.training;

import android.os.Parcelable;

import com.android.ondevicepersonalization.internal.util.DataClass;

@DataClass(genBuilder = true, genEqualsHashCode = true)
public class IsolatedTrainingFlagsInput implements Parcelable {
    // Reschedule value in seconds in case TF error occurred.
    private long mTfErrorRescheduleSeconds;

    // Indicates if CEL is enabled.
    private boolean mIsClientErrorLoggingEnabled = false;

    // Code below generated by codegen v1.0.23.
    //
    // DO NOT MODIFY!
    // CHECKSTYLE:OFF Generated code
    //
    // To regenerate run:
    // $ codegen
    // $ANDROID_BUILD_TOP/packages/modules/OnDevicePersonalization/federatedcompute/src/com/android/federatedcompute/services/training/IsolatedTrainingFlagsInput.java
    //
    // To exclude the generated code from IntelliJ auto-formatting enable (one-time):
    //   Settings > Editor > Code Style > Formatter Control
    // @formatter:off

    @DataClass.Generated.Member
    /* package-private */ IsolatedTrainingFlagsInput(
            long tfErrorRescheduleSeconds, boolean isClientErrorLoggingEnabled) {
        this.mTfErrorRescheduleSeconds = tfErrorRescheduleSeconds;
        this.mIsClientErrorLoggingEnabled = isClientErrorLoggingEnabled;

        // onConstructed(); // You can define this method to get a callback
    }

    @DataClass.Generated.Member
    public long getTfErrorRescheduleSeconds() {
        return mTfErrorRescheduleSeconds;
    }

    @DataClass.Generated.Member
    public boolean isIsClientErrorLoggingEnabled() {
        return mIsClientErrorLoggingEnabled;
    }

    @Override
    @DataClass.Generated.Member
    public boolean equals(@android.annotation.Nullable Object o) {
        // You can override field equality logic by defining either of the methods like:
        // boolean fieldNameEquals(IsolatedTrainingFlagsInput other) { ... }
        // boolean fieldNameEquals(FieldType otherValue) { ... }

        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        @SuppressWarnings("unchecked")
        IsolatedTrainingFlagsInput that = (IsolatedTrainingFlagsInput) o;
        //noinspection PointlessBooleanExpression
        return true
                && mTfErrorRescheduleSeconds == that.mTfErrorRescheduleSeconds
                && mIsClientErrorLoggingEnabled == that.mIsClientErrorLoggingEnabled;
    }

    @Override
    @DataClass.Generated.Member
    public int hashCode() {
        // You can override field hashCode logic by defining methods like:
        // int fieldNameHashCode() { ... }

        int _hash = 1;
        _hash = 31 * _hash + Long.hashCode(mTfErrorRescheduleSeconds);
        _hash = 31 * _hash + Boolean.hashCode(mIsClientErrorLoggingEnabled);
        return _hash;
    }

    @Override
    @DataClass.Generated.Member
    public void writeToParcel(@android.annotation.NonNull android.os.Parcel dest, int flags) {
        // You can override field parcelling by defining methods like:
        // void parcelFieldName(Parcel dest, int flags) { ... }

        byte flg = 0;
        if (mIsClientErrorLoggingEnabled) flg |= 0x2;
        dest.writeByte(flg);
        dest.writeLong(mTfErrorRescheduleSeconds);
    }

    @Override
    @DataClass.Generated.Member
    public int describeContents() {
        return 0;
    }

    /** @hide */
    @SuppressWarnings({"unchecked", "RedundantCast"})
    @DataClass.Generated.Member
    protected IsolatedTrainingFlagsInput(@android.annotation.NonNull android.os.Parcel in) {
        // You can override field unparcelling by defining methods like:
        // static FieldType unparcelFieldName(Parcel in) { ... }

        byte flg = in.readByte();
        boolean isClientErrorLoggingEnabled = (flg & 0x2) != 0;
        long tfErrorRescheduleSeconds = in.readLong();

        this.mTfErrorRescheduleSeconds = tfErrorRescheduleSeconds;
        this.mIsClientErrorLoggingEnabled = isClientErrorLoggingEnabled;

        // onConstructed(); // You can define this method to get a callback
    }

    @DataClass.Generated.Member
    public static final @android.annotation.NonNull Parcelable.Creator<IsolatedTrainingFlagsInput>
            CREATOR =
                    new Parcelable.Creator<IsolatedTrainingFlagsInput>() {
                        @Override
                        public IsolatedTrainingFlagsInput[] newArray(int size) {
                            return new IsolatedTrainingFlagsInput[size];
                        }

                        @Override
                        public IsolatedTrainingFlagsInput createFromParcel(
                                @android.annotation.NonNull android.os.Parcel in) {
                            return new IsolatedTrainingFlagsInput(in);
                        }
                    };

    /** A builder for {@link IsolatedTrainingFlagsInput} */
    @SuppressWarnings("WeakerAccess")
    @DataClass.Generated.Member
    public static class Builder {

        private long mTfErrorRescheduleSeconds;
        private boolean mIsClientErrorLoggingEnabled;

        private long mBuilderFieldsSet = 0L;

        public Builder(){}

        @DataClass.Generated.Member
        public @android.annotation.NonNull Builder setTfErrorRescheduleSeconds(long value) {
            checkNotUsed();
            mBuilderFieldsSet |= 0x1;
            mTfErrorRescheduleSeconds = value;
            return this;
        }

        @DataClass.Generated.Member
        public @android.annotation.NonNull Builder setIsClientErrorLoggingEnabled(boolean value) {
            checkNotUsed();
            mBuilderFieldsSet |= 0x2;
            mIsClientErrorLoggingEnabled = value;
            return this;
        }

        /** Builds the instance. This builder should not be touched after calling this! */
        public @android.annotation.NonNull IsolatedTrainingFlagsInput build() {
            checkNotUsed();
            mBuilderFieldsSet |= 0x4; // Mark builder used

            if ((mBuilderFieldsSet & 0x2) == 0) {
                mIsClientErrorLoggingEnabled = false;
            }
            IsolatedTrainingFlagsInput o =
                    new IsolatedTrainingFlagsInput(
                            mTfErrorRescheduleSeconds, mIsClientErrorLoggingEnabled);
            return o;
        }

        private void checkNotUsed() {
            if ((mBuilderFieldsSet & 0x4) != 0) {
                throw new IllegalStateException(
                        "This Builder should not be reused. Use a new Builder instance instead");
            }
        }
    }

    @DataClass.Generated(
            time = 1709768399114L,
            codegenVersion = "1.0.23",
            sourceFile =
                    "packages/modules/OnDevicePersonalization/federatedcompute/src/com/android/federatedcompute/services/training/IsolatedTrainingFlagsInput.java",
            inputSignatures =
                    "private  long mTfErrorRescheduleSeconds\nprivate  boolean mIsClientErrorLoggingEnabled\nclass IsolatedTrainingFlagsInput extends java.lang.Object implements [android.os.Parcelable]\n@com.android.ondevicepersonalization.internal.util.DataClass(genBuilder=true, genEqualsHashCode=true)")
    @Deprecated
    private void __metadata() {}
    // @formatter:on
    // End of generated code
}
