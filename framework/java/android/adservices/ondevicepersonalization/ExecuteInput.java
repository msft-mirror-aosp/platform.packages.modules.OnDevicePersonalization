/*
 * Copyright (C) 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.adservices.ondevicepersonalization;

import static android.adservices.ondevicepersonalization.Constants.KEY_ENABLE_ONDEVICEPERSONALIZATION_APIS;

import android.annotation.FlaggedApi;
import android.annotation.NonNull;
import android.os.PersistableBundle;

import com.android.ondevicepersonalization.internal.util.AnnotationValidations;
import com.android.ondevicepersonalization.internal.util.DataClass;

/**
 * The input data for {@link IsolatedWorker#onExecute(ExecuteInput, java.util.function.Consumer)}.
 *
 * @hide
 */
@FlaggedApi(KEY_ENABLE_ONDEVICEPERSONALIZATION_APIS)
@DataClass(genBuilder = false, genHiddenConstructor = true, genEqualsHashCode = true)
public final class ExecuteInput {
    /**
     * The package name of the calling app.
     */
    @NonNull String mAppPackageName = "";

    /**
     * The parameters provided by the app to the {@link IsolatedService}. The service
     * defines the expected keys in this {@link PersistableBundle}.
     */
    @NonNull PersistableBundle mAppParams = PersistableBundle.EMPTY;

    /** @hide */
    public ExecuteInput(@NonNull ExecuteInputParcel parcel) {
        this(parcel.getAppPackageName(), parcel.getAppParams());
    }



    // Code below generated by codegen v1.0.23.
    //
    // DO NOT MODIFY!
    // CHECKSTYLE:OFF Generated code
    //
    // To regenerate run:
    // $ codegen $ANDROID_BUILD_TOP/packages/modules/OnDevicePersonalization/framework/java/android/adservices/ondevicepersonalization/ExecuteInput.java
    //
    // To exclude the generated code from IntelliJ auto-formatting enable (one-time):
    //   Settings > Editor > Code Style > Formatter Control
    //@formatter:off


    /**
     * Creates a new ExecuteInput.
     *
     * @param appPackageName
     *   The package name of the calling app.
     * @param appParams
     *   The parameters provided by the app to the {@link IsolatedService}. The service
     *   defines the expected keys in this {@link PersistableBundle}.
     * @hide
     */
    @DataClass.Generated.Member
    public ExecuteInput(
            @NonNull String appPackageName,
            @NonNull PersistableBundle appParams) {
        this.mAppPackageName = appPackageName;
        AnnotationValidations.validate(
                NonNull.class, null, mAppPackageName);
        this.mAppParams = appParams;
        AnnotationValidations.validate(
                NonNull.class, null, mAppParams);

        // onConstructed(); // You can define this method to get a callback
    }

    /**
     * The package name of the calling app.
     */
    @DataClass.Generated.Member
    public @NonNull String getAppPackageName() {
        return mAppPackageName;
    }

    /**
     * The parameters provided by the app to the {@link IsolatedService}. The service
     * defines the expected keys in this {@link PersistableBundle}.
     */
    @DataClass.Generated.Member
    public @NonNull PersistableBundle getAppParams() {
        return mAppParams;
    }

    @Override
    @DataClass.Generated.Member
    public boolean equals(@android.annotation.Nullable Object o) {
        // You can override field equality logic by defining either of the methods like:
        // boolean fieldNameEquals(ExecuteInput other) { ... }
        // boolean fieldNameEquals(FieldType otherValue) { ... }

        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        @SuppressWarnings("unchecked")
        ExecuteInput that = (ExecuteInput) o;
        //noinspection PointlessBooleanExpression
        return true
                && java.util.Objects.equals(mAppPackageName, that.mAppPackageName)
                && java.util.Objects.equals(mAppParams, that.mAppParams);
    }

    @Override
    @DataClass.Generated.Member
    public int hashCode() {
        // You can override field hashCode logic by defining methods like:
        // int fieldNameHashCode() { ... }

        int _hash = 1;
        _hash = 31 * _hash + java.util.Objects.hashCode(mAppPackageName);
        _hash = 31 * _hash + java.util.Objects.hashCode(mAppParams);
        return _hash;
    }

    @DataClass.Generated(
            time = 1698879004862L,
            codegenVersion = "1.0.23",
            sourceFile = "packages/modules/OnDevicePersonalization/framework/java/android/adservices/ondevicepersonalization/ExecuteInput.java",
            inputSignatures = " @android.annotation.NonNull java.lang.String mAppPackageName\n @android.annotation.NonNull android.os.PersistableBundle mAppParams\nclass ExecuteInput extends java.lang.Object implements []\n@com.android.ondevicepersonalization.internal.util.DataClass(genBuilder=false, genHiddenConstructor=true, genEqualsHashCode=true)")
    @Deprecated
    private void __metadata() {}


    //@formatter:on
    // End of generated code

}
