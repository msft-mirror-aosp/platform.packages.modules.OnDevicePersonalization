/*
 * Copyright (C) 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.adservices.ondevicepersonalization;

import static android.adservices.ondevicepersonalization.Constants.KEY_ENABLE_ONDEVICEPERSONALIZATION_APIS;

import android.annotation.FlaggedApi;
import android.annotation.NonNull;
import android.annotation.Nullable;

import com.android.ondevicepersonalization.internal.util.AnnotationValidations;
import com.android.ondevicepersonalization.internal.util.DataClass;

import java.util.Collections;
import java.util.List;

/**
 * The result returned by
 * {@link IsolatedWorker#onExecute(ExecuteInput, java.util.function.Consumer)} in response to a call to
 * {@code OnDevicePersonalizationManager#execute(ComponentName, PersistableBundle,
 * java.util.concurrent.Executor, OutcomeReceiver)}
 * from a client app.
 */
@FlaggedApi(KEY_ENABLE_ONDEVICEPERSONALIZATION_APIS)
@DataClass(genBuilder = true, genEqualsHashCode = true)
public final class ExecuteOutput {
    /**
     * Persistent data to be written to the REQUESTS table after
     * {@link IsolatedWorker#onExecute(ExecuteInput, java.util.function.Consumer)}
     * completes. If null, no persistent data will be written.
     */
    @Nullable private RequestLogRecord mRequestLogRecord = null;

    /**
     * A {@link RenderingConfig} object that contains information about the content to be rendered
     * in the client app view. Can be null if no content is to be rendered.
     */
    @Nullable private RenderingConfig mRenderingConfig = null;

    /**
     * A list of {@link EventLogRecord}. Writes events to the EVENTS table and associates
     * them with requests with the specified corresponding {@link RequestLogRecord} from
     * {@link EventLogRecord#getRequestLogRecord()}.
     * If the event does not contain a {@link RequestLogRecord} emitted by this package, the
     * EventLogRecord is not written.
     * @hide
     */
    @DataClass.PluralOf("eventLogRecord")
    @NonNull private List<EventLogRecord> mEventLogRecords = Collections.emptyList();



    // Code below generated by codegen v1.0.23.
    //
    // DO NOT MODIFY!
    // CHECKSTYLE:OFF Generated code
    //
    // To regenerate run:
    // $ codegen $ANDROID_BUILD_TOP/packages/modules/OnDevicePersonalization/framework/java/android/adservices/ondevicepersonalization/ExecuteOutput.java
    //
    // To exclude the generated code from IntelliJ auto-formatting enable (one-time):
    //   Settings > Editor > Code Style > Formatter Control
    //@formatter:off


    @DataClass.Generated.Member
    /* package-private */ ExecuteOutput(
            @Nullable RequestLogRecord requestLogRecord,
            @Nullable RenderingConfig renderingConfig,
            @NonNull List<EventLogRecord> eventLogRecords) {
        this.mRequestLogRecord = requestLogRecord;
        this.mRenderingConfig = renderingConfig;
        this.mEventLogRecords = eventLogRecords;
        AnnotationValidations.validate(
                NonNull.class, null, mEventLogRecords);

        // onConstructed(); // You can define this method to get a callback
    }

    /**
     * Persistent data to be written to the REQUESTS table after
     * {@link IsolatedWorker#onExecute(ExecuteInput, java.util.function.Consumer)}
     * completes. If null, no persistent data will be written.
     */
    @DataClass.Generated.Member
    public @Nullable RequestLogRecord getRequestLogRecord() {
        return mRequestLogRecord;
    }

    /**
     * A {@link RenderingConfig} object that contains information about the content to be rendered
     * in the client app view. Can be null if no content is to be rendered.
     */
    @DataClass.Generated.Member
    public @Nullable RenderingConfig getRenderingConfig() {
        return mRenderingConfig;
    }

    /**
     * A list of {@link EventLogRecord}. Writes events to the EVENTS table and associates
     * them with requests with the specified corresponding {@link RequestLogRecord} from
     * {@link EventLogRecord#getRequestLogRecord()}.
     * If the event does not contain a {@link RequestLogRecord} emitted by this package, the
     * EventLogRecord is not written.
     *
     * @hide
     */
    @DataClass.Generated.Member
    public @NonNull List<EventLogRecord> getEventLogRecords() {
        return mEventLogRecords;
    }

    @Override
    @DataClass.Generated.Member
    public boolean equals(@Nullable Object o) {
        // You can override field equality logic by defining either of the methods like:
        // boolean fieldNameEquals(ExecuteOutput other) { ... }
        // boolean fieldNameEquals(FieldType otherValue) { ... }

        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        @SuppressWarnings("unchecked")
        ExecuteOutput that = (ExecuteOutput) o;
        //noinspection PointlessBooleanExpression
        return true
                && java.util.Objects.equals(mRequestLogRecord, that.mRequestLogRecord)
                && java.util.Objects.equals(mRenderingConfig, that.mRenderingConfig)
                && java.util.Objects.equals(mEventLogRecords, that.mEventLogRecords);
    }

    @Override
    @DataClass.Generated.Member
    public int hashCode() {
        // You can override field hashCode logic by defining methods like:
        // int fieldNameHashCode() { ... }

        int _hash = 1;
        _hash = 31 * _hash + java.util.Objects.hashCode(mRequestLogRecord);
        _hash = 31 * _hash + java.util.Objects.hashCode(mRenderingConfig);
        _hash = 31 * _hash + java.util.Objects.hashCode(mEventLogRecords);
        return _hash;
    }

    /**
     * A builder for {@link ExecuteOutput}
     */
    @FlaggedApi(KEY_ENABLE_ONDEVICEPERSONALIZATION_APIS)
    @SuppressWarnings("WeakerAccess")
    @DataClass.Generated.Member
    public static final class Builder {

        private @Nullable RequestLogRecord mRequestLogRecord;
        private @Nullable RenderingConfig mRenderingConfig;
        private @NonNull List<EventLogRecord> mEventLogRecords;

        private long mBuilderFieldsSet = 0L;

        public Builder() {
        }

        /**
         * Persistent data to be written to the REQUESTS table after
         * {@link IsolatedWorker#onExecute(ExecuteInput, java.util.function.Consumer)}
         * completes. If null, no persistent data will be written.
         */
        @DataClass.Generated.Member
        public @NonNull Builder setRequestLogRecord(@NonNull RequestLogRecord value) {
            checkNotUsed();
            mBuilderFieldsSet |= 0x1;
            mRequestLogRecord = value;
            return this;
        }

        /**
         * A {@link RenderingConfig} object that contains information about the content to be rendered
         * in the client app view. Can be null if no content is to be rendered.
         */
        @DataClass.Generated.Member
        public @NonNull Builder setRenderingConfig(@NonNull RenderingConfig value) {
            checkNotUsed();
            mBuilderFieldsSet |= 0x2;
            mRenderingConfig = value;
            return this;
        }

        /**
         * A list of {@link EventLogRecord}. Writes events to the EVENTS table and associates
         * them with requests with the specified corresponding {@link RequestLogRecord} from
         * {@link EventLogRecord#getRequestLogRecord()}.
         * If the event does not contain a {@link RequestLogRecord} emitted by this package, the
         * EventLogRecord is not written.
         *
         * @hide
         */
        @DataClass.Generated.Member
        public @NonNull Builder setEventLogRecords(@NonNull List<EventLogRecord> value) {
            checkNotUsed();
            mBuilderFieldsSet |= 0x4;
            mEventLogRecords = value;
            return this;
        }

        /** @see #setEventLogRecords @hide */
        @DataClass.Generated.Member
        public @NonNull Builder addEventLogRecord(@NonNull EventLogRecord value) {
            if (mEventLogRecords == null) setEventLogRecords(new java.util.ArrayList<>());
            mEventLogRecords.add(value);
            return this;
        }

        /** Builds the instance. This builder should not be touched after calling this! */
        public @NonNull ExecuteOutput build() {
            checkNotUsed();
            mBuilderFieldsSet |= 0x8; // Mark builder used

            if ((mBuilderFieldsSet & 0x1) == 0) {
                mRequestLogRecord = null;
            }
            if ((mBuilderFieldsSet & 0x2) == 0) {
                mRenderingConfig = null;
            }
            if ((mBuilderFieldsSet & 0x4) == 0) {
                mEventLogRecords = Collections.emptyList();
            }
            ExecuteOutput o = new ExecuteOutput(
                    mRequestLogRecord,
                    mRenderingConfig,
                    mEventLogRecords);
            return o;
        }

        private void checkNotUsed() {
            if ((mBuilderFieldsSet & 0x8) != 0) {
                throw new IllegalStateException(
                        "This Builder should not be reused. Use a new Builder instance instead");
            }
        }
    }

    @DataClass.Generated(
            time = 1705026369283L,
            codegenVersion = "1.0.23",
            sourceFile = "packages/modules/OnDevicePersonalization/framework/java/android/adservices/ondevicepersonalization/ExecuteOutput.java",
            inputSignatures = "private @android.annotation.Nullable android.adservices.ondevicepersonalization.RequestLogRecord mRequestLogRecord\nprivate @android.annotation.Nullable android.adservices.ondevicepersonalization.RenderingConfig mRenderingConfig\nprivate @com.android.ondevicepersonalization.internal.util.DataClass.PluralOf(\"eventLogRecord\") @android.annotation.NonNull java.util.List<android.adservices.ondevicepersonalization.EventLogRecord> mEventLogRecords\nclass ExecuteOutput extends java.lang.Object implements []\n@com.android.ondevicepersonalization.internal.util.DataClass(genBuilder=true, genEqualsHashCode=true)")
    @Deprecated
    private void __metadata() {}


    //@formatter:on
    // End of generated code

}
