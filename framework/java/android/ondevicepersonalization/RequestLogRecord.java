/*
 * Copyright (C) 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.ondevicepersonalization;

import android.annotation.Nullable;
import android.content.ContentValues;
import android.os.Parcelable;

import com.android.ondevicepersonalization.internal.util.DataClass;

import java.util.List;

/**
 * Contains data that will be written to the log at the end of execution.
 *
 * @hide
 */
@DataClass(genBuilder = true, genEqualsHashCode = true)
public final class RequestLogRecord implements Parcelable {
    /**
     * A List of rows, each containing a {@link ContentValues}.
     **/
    @DataClass.PluralOf("row")
    @Nullable List<ContentValues> mRows = null;



    // Code below generated by codegen v1.0.23.
    //
    // DO NOT MODIFY!
    // CHECKSTYLE:OFF Generated code
    //
    // To regenerate run:
    // $ codegen $ANDROID_BUILD_TOP/packages/modules/OnDevicePersonalization/framework/java/android/ondevicepersonalization/RequestLogRecord.java
    //
    // To exclude the generated code from IntelliJ auto-formatting enable (one-time):
    //   Settings > Editor > Code Style > Formatter Control
    //@formatter:off


    @DataClass.Generated.Member
    /* package-private */ RequestLogRecord(
            @Nullable List<ContentValues> rows) {
        this.mRows = rows;

        // onConstructed(); // You can define this method to get a callback
    }

    /**
     * A List of rows, each containing a {@link ContentValues}.
     */
    @DataClass.Generated.Member
    public @Nullable List<ContentValues> getRows() {
        return mRows;
    }

    @Override
    @DataClass.Generated.Member
    public boolean equals(@Nullable Object o) {
        // You can override field equality logic by defining either of the methods like:
        // boolean fieldNameEquals(RequestLogRecord other) { ... }
        // boolean fieldNameEquals(FieldType otherValue) { ... }

        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        @SuppressWarnings("unchecked")
        RequestLogRecord that = (RequestLogRecord) o;
        //noinspection PointlessBooleanExpression
        return true
                && java.util.Objects.equals(mRows, that.mRows);
    }

    @Override
    @DataClass.Generated.Member
    public int hashCode() {
        // You can override field hashCode logic by defining methods like:
        // int fieldNameHashCode() { ... }

        int _hash = 1;
        _hash = 31 * _hash + java.util.Objects.hashCode(mRows);
        return _hash;
    }

    @Override
    @DataClass.Generated.Member
    public void writeToParcel(@android.annotation.NonNull android.os.Parcel dest, int flags) {
        // You can override field parcelling by defining methods like:
        // void parcelFieldName(Parcel dest, int flags) { ... }

        byte flg = 0;
        if (mRows != null) flg |= 0x1;
        dest.writeByte(flg);
        if (mRows != null) dest.writeParcelableList(mRows, flags);
    }

    @Override
    @DataClass.Generated.Member
    public int describeContents() { return 0; }

    /** @hide */
    @SuppressWarnings({"unchecked", "RedundantCast"})
    @DataClass.Generated.Member
    /* package-private */ RequestLogRecord(@android.annotation.NonNull android.os.Parcel in) {
        // You can override field unparcelling by defining methods like:
        // static FieldType unparcelFieldName(Parcel in) { ... }

        byte flg = in.readByte();
        List<ContentValues> rows = null;
        if ((flg & 0x1) != 0) {
            rows = new java.util.ArrayList<>();
            in.readParcelableList(rows, ContentValues.class.getClassLoader());
        }

        this.mRows = rows;

        // onConstructed(); // You can define this method to get a callback
    }

    @DataClass.Generated.Member
    public static final @android.annotation.NonNull Parcelable.Creator<RequestLogRecord> CREATOR
            = new Parcelable.Creator<RequestLogRecord>() {
        @Override
        public RequestLogRecord[] newArray(int size) {
            return new RequestLogRecord[size];
        }

        @Override
        public RequestLogRecord createFromParcel(@android.annotation.NonNull android.os.Parcel in) {
            return new RequestLogRecord(in);
        }
    };

    /**
     * A builder for {@link RequestLogRecord}
     */
    @SuppressWarnings("WeakerAccess")
    @DataClass.Generated.Member
    public static final class Builder {

        private @Nullable List<ContentValues> mRows;

        private long mBuilderFieldsSet = 0L;

        public Builder() {
        }

        /**
         * A List of rows, each containing a {@link ContentValues}.
         */
        @DataClass.Generated.Member
        public @android.annotation.NonNull Builder setRows(@android.annotation.NonNull List<ContentValues> value) {
            checkNotUsed();
            mBuilderFieldsSet |= 0x1;
            mRows = value;
            return this;
        }

        /** @see #setRows */
        @DataClass.Generated.Member
        public @android.annotation.NonNull Builder addRow(@android.annotation.NonNull ContentValues value) {
            if (mRows == null) setRows(new java.util.ArrayList<>());
            mRows.add(value);
            return this;
        }

        /** Builds the instance. This builder should not be touched after calling this! */
        public @android.annotation.NonNull RequestLogRecord build() {
            checkNotUsed();
            mBuilderFieldsSet |= 0x2; // Mark builder used

            if ((mBuilderFieldsSet & 0x1) == 0) {
                mRows = null;
            }
            RequestLogRecord o = new RequestLogRecord(
                    mRows);
            return o;
        }

        private void checkNotUsed() {
            if ((mBuilderFieldsSet & 0x2) != 0) {
                throw new IllegalStateException(
                        "This Builder should not be reused. Use a new Builder instance instead");
            }
        }
    }

    @DataClass.Generated(
            time = 1687383430307L,
            codegenVersion = "1.0.23",
            sourceFile = "packages/modules/OnDevicePersonalization/framework/java/android/ondevicepersonalization/RequestLogRecord.java",
            inputSignatures = " @com.android.ondevicepersonalization.internal.util.DataClass.PluralOf(\"row\") @android.annotation.Nullable java.util.List<android.content.ContentValues> mRows\nclass RequestLogRecord extends java.lang.Object implements [android.os.Parcelable]\n@com.android.ondevicepersonalization.internal.util.DataClass(genBuilder=true, genEqualsHashCode=true)")
    @Deprecated
    private void __metadata() {}


    //@formatter:on
    // End of generated code

}
