/*
 * Copyright (C) 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.ondevicepersonalization;

import android.annotation.NonNull;
import android.os.Parcelable;

import com.android.ondevicepersonalization.internal.util.AnnotationValidations;
import com.android.ondevicepersonalization.internal.util.DataClass;

/**
 * Identity of an {@link Exchange} or {@link Bidder}. Contains a package name + SHA256 hash
 * of the signing key. The hash guards against package name spoofing attacks.
 *
 * @hide
 */
@DataClass(genBuilder = true, genEqualsHashCode = true)
public class PackageInfo implements Parcelable {
    /**
     * The package name of the bidder.
     */
    @NonNull private String mPackageName = "";

    /**
     * A hash of the key used to sign the bidder package.
     */
    @NonNull private String mCertDigest = "";



    // Code below generated by codegen v1.0.23.
    //
    // DO NOT MODIFY!
    // CHECKSTYLE:OFF Generated code
    //
    // To regenerate run:
    // $ codegen $ANDROID_BUILD_TOP/packages/modules/OnDevicePersonalization/framework/java/android/ondevicepersonalization/PackageInfo.java
    //
    // To exclude the generated code from IntelliJ auto-formatting enable (one-time):
    //   Settings > Editor > Code Style > Formatter Control
    //@formatter:off


    @DataClass.Generated.Member
    /* package-private */ PackageInfo(
            @NonNull String packageName,
            @NonNull String certDigest) {
        this.mPackageName = packageName;
        AnnotationValidations.validate(
                NonNull.class, null, mPackageName);
        this.mCertDigest = certDigest;
        AnnotationValidations.validate(
                NonNull.class, null, mCertDigest);

        // onConstructed(); // You can define this method to get a callback
    }

    /**
     * The package name of the bidder.
     */
    @DataClass.Generated.Member
    public @NonNull String getPackageName() {
        return mPackageName;
    }

    /**
     * A hash of the key used to sign the bidder package.
     */
    @DataClass.Generated.Member
    public @NonNull String getCertDigest() {
        return mCertDigest;
    }

    @Override
    @DataClass.Generated.Member
    public boolean equals(@android.annotation.Nullable Object o) {
        // You can override field equality logic by defining either of the methods like:
        // boolean fieldNameEquals(PackageInfo other) { ... }
        // boolean fieldNameEquals(FieldType otherValue) { ... }

        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        @SuppressWarnings("unchecked")
        PackageInfo that = (PackageInfo) o;
        //noinspection PointlessBooleanExpression
        return true
                && java.util.Objects.equals(mPackageName, that.mPackageName)
                && java.util.Objects.equals(mCertDigest, that.mCertDigest);
    }

    @Override
    @DataClass.Generated.Member
    public int hashCode() {
        // You can override field hashCode logic by defining methods like:
        // int fieldNameHashCode() { ... }

        int _hash = 1;
        _hash = 31 * _hash + java.util.Objects.hashCode(mPackageName);
        _hash = 31 * _hash + java.util.Objects.hashCode(mCertDigest);
        return _hash;
    }

    @Override
    @DataClass.Generated.Member
    public void writeToParcel(@NonNull android.os.Parcel dest, int flags) {
        // You can override field parcelling by defining methods like:
        // void parcelFieldName(Parcel dest, int flags) { ... }

        dest.writeString(mPackageName);
        dest.writeString(mCertDigest);
    }

    @Override
    @DataClass.Generated.Member
    public int describeContents() { return 0; }

    /** @hide */
    @SuppressWarnings({"unchecked", "RedundantCast"})
    @DataClass.Generated.Member
    protected PackageInfo(@NonNull android.os.Parcel in) {
        // You can override field unparcelling by defining methods like:
        // static FieldType unparcelFieldName(Parcel in) { ... }

        String packageName = in.readString();
        String certDigest = in.readString();

        this.mPackageName = packageName;
        AnnotationValidations.validate(
                NonNull.class, null, mPackageName);
        this.mCertDigest = certDigest;
        AnnotationValidations.validate(
                NonNull.class, null, mCertDigest);

        // onConstructed(); // You can define this method to get a callback
    }

    @DataClass.Generated.Member
    public static final @NonNull Parcelable.Creator<PackageInfo> CREATOR
            = new Parcelable.Creator<PackageInfo>() {
        @Override
        public PackageInfo[] newArray(int size) {
            return new PackageInfo[size];
        }

        @Override
        public PackageInfo createFromParcel(@NonNull android.os.Parcel in) {
            return new PackageInfo(in);
        }
    };

    /**
     * A builder for {@link PackageInfo}
     */
    @SuppressWarnings("WeakerAccess")
    @DataClass.Generated.Member
    public static class Builder {

        private @NonNull String mPackageName;
        private @NonNull String mCertDigest;

        private long mBuilderFieldsSet = 0L;

        public Builder() {
        }

        /**
         * The package name of the bidder.
         */
        @DataClass.Generated.Member
        public @NonNull Builder setPackageName(@NonNull String value) {
            checkNotUsed();
            mBuilderFieldsSet |= 0x1;
            mPackageName = value;
            return this;
        }

        /**
         * A hash of the key used to sign the bidder package.
         */
        @DataClass.Generated.Member
        public @NonNull Builder setCertDigest(@NonNull String value) {
            checkNotUsed();
            mBuilderFieldsSet |= 0x2;
            mCertDigest = value;
            return this;
        }

        /** Builds the instance. This builder should not be touched after calling this! */
        public @NonNull PackageInfo build() {
            checkNotUsed();
            mBuilderFieldsSet |= 0x4; // Mark builder used

            if ((mBuilderFieldsSet & 0x1) == 0) {
                mPackageName = "";
            }
            if ((mBuilderFieldsSet & 0x2) == 0) {
                mCertDigest = "";
            }
            PackageInfo o = new PackageInfo(
                    mPackageName,
                    mCertDigest);
            return o;
        }

        private void checkNotUsed() {
            if ((mBuilderFieldsSet & 0x4) != 0) {
                throw new IllegalStateException(
                        "This Builder should not be reused. Use a new Builder instance instead");
            }
        }
    }

    @DataClass.Generated(
            time = 1659462839221L,
            codegenVersion = "1.0.23",
            sourceFile = "packages/modules/OnDevicePersonalization/framework/java/android/ondevicepersonalization/PackageInfo.java",
            inputSignatures = "private @android.annotation.NonNull java.lang.String mPackageName\nprivate @android.annotation.NonNull java.lang.String mCertDigest\nclass PackageInfo extends java.lang.Object implements [android.os.Parcelable]\n@com.android.ondevicepersonalization.internal.util.DataClass(genBuilder=true, genEqualsHashCode=true)")
    @Deprecated
    private void __metadata() {}


    //@formatter:on
    // End of generated code

}
